{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\Romain\\\\Documents\\\\EPSI 3e ANN\\xC9E\\\\MSPR\\\\GoStyle\\\\React\\\\GoStyle\\\\components\\\\Themed.tsx\";\nimport * as React from 'react';\nimport DefaultText from \"react-native-web/dist/exports/Text\";\nimport DefaultView from \"react-native-web/dist/exports/View\";\nimport DefaultScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Colors from \"../constants/Colors\";\nimport useColorScheme from \"../hooks/useColorScheme\";\nexport function useThemeColor(props, colorName) {\n  var theme = useColorScheme();\n  var colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  } else {\n    return Colors[theme][colorName];\n  }\n}\nexport function Text(props) {\n  var style = props.style,\n      lightColor = props.lightColor,\n      darkColor = props.darkColor,\n      otherProps = _objectWithoutProperties(props, [\"style\", \"lightColor\", \"darkColor\"]);\n\n  var color = lightColor;\n  return React.createElement(DefaultText, _extends({\n    style: [{\n      color: color\n    }, style]\n  }, otherProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }\n  }));\n}\nexport function View(props) {\n  var style = props.style,\n      lightColor = props.lightColor,\n      darkColor = props.darkColor,\n      otherProps = _objectWithoutProperties(props, [\"style\", \"lightColor\", \"darkColor\"]);\n\n  var backgroundColor = lightColor;\n  return React.createElement(DefaultView, _extends({\n    style: [{\n      backgroundColor: backgroundColor\n    }, style]\n  }, otherProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }\n  }));\n}\nexport function ScrollView(props) {\n  var style = props.style,\n      lightColor = props.lightColor,\n      darkColor = props.darkColor,\n      otherProps = _objectWithoutProperties(props, [\"style\", \"lightColor\", \"darkColor\"]);\n\n  var backgroundColor = useThemeColor({\n    light: lightColor,\n    dark: darkColor\n  }, 'background');\n  return React.createElement(DefaultScrollView, _extends({\n    style: [{\n      backgroundColor: backgroundColor\n    }, style]\n  }, otherProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 10\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Romain/Documents/EPSI 3e ANNÃ‰E/MSPR/GoStyle/React/GoStyle/components/Themed.tsx"],"names":["React","Colors","useColorScheme","useThemeColor","props","colorName","theme","colorFromProps","Text","style","lightColor","darkColor","otherProps","color","View","backgroundColor","ScrollView","light","dark"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAGA,OAAOC,MAAP;AACA,OAAOC,cAAP;AAEA,OAAO,SAASC,aAAT,CACLC,KADK,EAELC,SAFK,EAGL;AACA,MAAMC,KAAK,GAAGJ,cAAc,EAA5B;AACA,MAAMK,cAAc,GAAGH,KAAK,CAACE,KAAD,CAA5B;;AAEA,MAAIC,cAAJ,EAAoB;AAClB,WAAOA,cAAP;AACD,GAFD,MAEO;AACL,WAAON,MAAM,CAACK,KAAD,CAAN,CAAcD,SAAd,CAAP;AACD;AACF;AAWD,OAAO,SAASG,IAAT,CAAcJ,KAAd,EAAgC;AAAA,MAC7BK,KAD6B,GACmBL,KADnB,CAC7BK,KAD6B;AAAA,MACtBC,UADsB,GACmBN,KADnB,CACtBM,UADsB;AAAA,MACVC,SADU,GACmBP,KADnB,CACVO,SADU;AAAA,MACIC,UADJ,4BACmBR,KADnB;;AAErC,MAAMS,KAAK,GAAGH,UAAd;AAEA,SAAO,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAE,CAAC;AAAEG,MAAAA,KAAK,EAALA;AAAF,KAAD,EAAYJ,KAAZ;AAApB,KAA4CG,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD;AAED,OAAO,SAASE,IAAT,CAAcV,KAAd,EAAgC;AAAA,MAC7BK,KAD6B,GACmBL,KADnB,CAC7BK,KAD6B;AAAA,MACtBC,UADsB,GACmBN,KADnB,CACtBM,UADsB;AAAA,MACVC,SADU,GACmBP,KADnB,CACVO,SADU;AAAA,MACIC,UADJ,4BACmBR,KADnB;;AAErC,MAAMW,eAAe,GAAGL,UAAxB;AAEA,SAAO,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAE,CAAC;AAAEK,MAAAA,eAAe,EAAfA;AAAF,KAAD,EAAsBN,KAAtB;AAApB,KAAsDG,UAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD;AAED,OAAO,SAASI,UAAT,CAAoBZ,KAApB,EAA4C;AAAA,MACzCK,KADyC,GACOL,KADP,CACzCK,KADyC;AAAA,MAClCC,UADkC,GACON,KADP,CAClCM,UADkC;AAAA,MACtBC,SADsB,GACOP,KADP,CACtBO,SADsB;AAAA,MACRC,UADQ,4BACOR,KADP;;AAEjD,MAAMW,eAAe,GAAGZ,aAAa,CAAC;AAAEc,IAAAA,KAAK,EAAEP,UAAT;AAAqBQ,IAAAA,IAAI,EAAEP;AAA3B,GAAD,EAAyC,YAAzC,CAArC;AAEA,SAAO,oBAAC,iBAAD;AAAmB,IAAA,KAAK,EAAE,CAAC;AAAEI,MAAAA,eAAe,EAAfA;AAAF,KAAD,EAAsBN,KAAtB;AAA1B,KAA4DG,UAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD","sourcesContent":["import * as React from 'react';\r\nimport { Text as DefaultText, View as DefaultView, ScrollView as DefaultScrollView } from 'react-native';\r\n\r\nimport Colors from '../constants/Colors';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\n\r\nexport function useThemeColor(\r\n  props: { light?: string; dark?: string },\r\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\r\n) {\r\n  const theme = useColorScheme();\r\n  const colorFromProps = props[theme];\r\n\r\n  if (colorFromProps) {\r\n    return colorFromProps;\r\n  } else {\r\n    return Colors[theme][colorName];\r\n  }\r\n}\r\n\r\ntype ThemeProps = {\r\n  lightColor?: string;\r\n  darkColor?: string;\r\n};\r\n\r\nexport type TextProps = ThemeProps & DefaultText['props'];\r\nexport type ViewProps = ThemeProps & DefaultView['props'];\r\nexport type ScrollViewProps = ThemeProps & DefaultView['props'];\r\n\r\nexport function Text(props: TextProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const color = lightColor;\r\n\r\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\r\n}\r\n\r\nexport function View(props: ViewProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const backgroundColor = lightColor;\r\n\r\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\r\n}\r\n\r\nexport function ScrollView(props: ScrollViewProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\r\n\r\n  return <DefaultScrollView style={[{ backgroundColor }, style]} {...otherProps} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}